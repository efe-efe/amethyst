
//=================================================================================	
Abilities
//=================================================================================	

The ability mapping is as following:

Q = "Ability1"
W = "Ability2"
E = "Ability3"
D = "Ability4"
F = "Ability5"
R = "Ability6"

If you add a pasive ability and it is not showing on on the HUD, probably is because you haven't to leveled it. To achieve this, use scripts

* When using an existing ability as BaseClass, if you want to override one of the SpecialValues, make sure that you copy the "LinkedSpecialBonus" part of it (check the npc_heroes original txt). Otherwise, the ability won't work as intended.

* Cant use "%AbilityCastRange" as a "FixedDistance" on a "LinearProjectile"

//=================================================================================	
Control motion Modifiers
//=================================================================================	

    When Linking a motion modifier (LUA_MOTION_BOTH/HORIZONTAL/VERTICAL) you have to restart the client, otherwise it will not recognize the modifier functions

//=================================================================================	
To use a "TrackedProjectile" as a "LinearProjectile"
//=================================================================================

First: Copy the intended particle to use on the "dota 2 beta\content\dota_addons\dotarite2\particles\mod_units\" directory

    * Its important to use a name different from "units" (on the example is used "mod_units")
    * Be sure to use the ".vpcf" and not the ".vpcf_c."

Second: Open the particle on the Valve's Particle Editor
    
    * On this process, the ".vpcf_c" files will be created on the "dota 2 beta\game\dota_addons\dotarite2\particles\mod_units\"
    directory.

Third: With the particle selected:
    
    a) On the menu of the left, select the category "Base Properties" 
        a.a) Remove the OPERATOR "C_OP_MaxVelocity"
        a.b) Remove the FORCE "C_OP_AttractToControlPoint"
    b) Again, on the menu of the left, click the (+) button next to "initializers", add the Initializer "Velocity set from control point" 
    c) Select the initializer you just have created
    d) Set the "control point number" field to "1"

//=================================================================================	
About "IsServer()"
//=================================================================================
    IsServer() is only required inside ability_lua scripts and lua modifiers. It's used to prevent running into problems with client-server difference (because the clients know less things than the server). In datadriven RunScripts, the lua functions only execute on the server.

//=================================================================================	
To print a table
//=================================================================================

For some reason, DebugPrintTable doesn't works. Use PrintTable instead

//=================================================================================	
On setting MaxHealth
//=================================================================================

    When using "npc:SetMaxHealth(int value)", the "MaxHealth" of a npc turns into "value", and the "RemainingHealth" remains the same. For example, lets say we have a npc called "NPC_TEST" with the next stats:

        MaxHealth = 100
        RemainingHealth = 50

    If we apply "NPC_TEST:SetMaxHealth(80)", the result should be:

        MaxHealth = 80
        RemainingHealth = 50

    Its very important to keep in mind that on every stat change, the "npc:SetMaxHealth(int value)" is automatically reaplied with "value = BaseMaxHealth + HealthProvidedByStats", so your "MaxHealth" can be overriden. "BaseMaxHealth" is the ammount of health that all the heroes starts with, and "HealthProvidedByStats" is the ammount of health provided by stats, meaning strength (str).

    In this particular addon, the stats are not used, meaning that they starts at 0 and never change. So there is no override on the MaxHealth after calculations, because ther is no calculations.

    What i have tested and didn't work:

        * Setting base max health and max health together
        * Setting base max health alone
        * Setting max health alone

//=================================================================================	
Projectiles and flags
//=================================================================================

    Flags can be used to make projectiles hit or ignore units overriden the default behavior. For example you can hit invisible units.

    
//=================================================================================	
Saving a modifier
//=================================================================================

    When creating a modifier with "Base_NPC:AddNewModifier()", the function actually returns the modifier itself, so you can save it as following:

    local modifier = self:GetCaster():AddNewModifier( params )

    And then do things like  "modifier:Destroy()"

//=================================================================================	
Attack speed
//=================================================================================

The methods "Base_NPC:GetAttackSpeed()" and "Base_NPC:GetAttacksPerSecond()" don't work as you could expect.

The method "Base_NPC:GetAttackSpeed()" should return the attack speed of a unit in seconds, meaning that the return value is the time it takes for the unit from the begining to the end of the attack. On the other side, the method "Base_NPC:GetAttacksPerSecond()" should return the number of attacks a unit can perform in one second. 

In reality, the first one is broken, and returns the same value than the second (attacks per second). So, you have to use the next simple formula: "AttackSpeed = ( 1 / AttacksPerSecond )"


//=================================================================================	
Lua abilities
//=================================================================================

    * The ability name on the "DataDriven" text file, and the name on the "lua_ability" script file has to be equals.
    * As the names has to be equal, is usual to use "heroname_abilityname" naming, to avoid conflics when two abilities has the same name for different heroes. Anyway, if you want to keep shorter names, you have to be sure that every ability has an unique name.


//=================================================================================	
Cast Point
//=================================================================================

Why to use modifier_cast_point instead of the built in one?
    * Built in one force the caster to go to the initial cast position in order to execute the spell
    * To prevent that the spell should be immediate, and in that case, the cast point is ignored